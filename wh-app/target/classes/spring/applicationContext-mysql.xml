<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

 	<!-- spring自动注解 -->
    <context:annotation-config />
    <context:component-scan base-package="com.wh.app.web" />

	<!-- 环境相关的配置文件配置. -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 生产环境需要在servlet容器启动时配置变量appConfigHome. -->
        <property name="location" value="file:${appConfigHome}/datasource.properties" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <!-- 本地环境下使用此值 -->
        <property name="properties" ref="mysqlJdbcProperties" />
    </bean>
    <bean name="mysqlJdbcProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:conf/datasource.properties" />
    </bean>
    
 	<!-- datasource配置 -->
 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${db-driver}"></property>
		<property name="url" value="${db-url}"></property>	
		<property name="username" value="${db-username}"></property>
		<property name="password" value="${db-password}"></property>
		<property name="initialSize" value="10" />
		<property name="maxActive" value="50" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="10000" />
		<property name="poolPreparedStatements" value="false" />
		<property name="testOnBorrow" value="true"/>
		<property name="validationQuery" value="select 1 from dual"/>
		<property name="defaultAutoCommit" value="false" />
	</bean>
	
    <!-- 事务控制  -->
    <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
    <tx:annotation-driven transaction-manager="transactionManager" />	
    
    <!-- 配置mybitasSqlSessionFactoryBean -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="configLocation" value="classpath:conf/mybatis.xml" /> 
        <!--  
        <property name="mapperLocations" value="classpath*:com/coship/cap/video/live/mapper/*Mapper.xml" />
        -->
        <property name="typeAliasesPackage" 
			        value="com.wh.app.web.model;
			        		com.my.mybatis.support.domain
			        " />
    </bean>  
      
    <!-- 配置SqlSessionTemplate  -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />  
    </bean>
    
     <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref local="jdbcdataSource" />
		</property>
	 </bean>
	 <bean id="jdbcdataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		 <property name="driverClassName">
			<value>${db-driver}</value>
		</property>
		<property name="url">
			<value>${db-url}</value>
		</property>
		<property name="username">
			<value>${db-username}</value>
		</property>
		<property name="password">
			<value>${db-password}</value>
		</property>
     </bean>
</beans>
